-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Scalar exposing (AWSDateTime(..), Codecs, Id(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type AWSDateTime
    = AWSDateTime String


type Id
    = Id String


defineCodecs :
    { codecAWSDateTime : Codec valueAWSDateTime
    , codecId : Codec valueId
    }
    -> Codecs valueAWSDateTime valueId
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueAWSDateTime valueId
    ->
        { codecAWSDateTime : Codec valueAWSDateTime
        , codecId : Codec valueId
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueAWSDateTime valueId -> Codec getterValue)
    -> Codecs valueAWSDateTime valueId
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueAWSDateTime valueId
    = Codecs (RawCodecs valueAWSDateTime valueId)


type alias RawCodecs valueAWSDateTime valueId =
    { codecAWSDateTime : Codec valueAWSDateTime
    , codecId : Codec valueId
    }


defaultCodecs : RawCodecs AWSDateTime Id
defaultCodecs =
    { codecAWSDateTime =
        { encoder = \(AWSDateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map AWSDateTime
        }
    , codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    }
